/**
 *  Copyright (C) 2021, Ubiquiti Networks, Inc,
 */

#pragma once
#include "biquad.h"

namespace ubnt {

class LowPassFilter : public SosFilter {

public:
    enum class SampleRate { Fs_16kHz = 0, Fs_32kHz, Fs_48kHz, Fs_ALL };
    enum class CutoffFreq { Fc_4kHz = 0, Fc_5kHz, Fc_6kHz, Fc_7kHz, Fc_ALL };

    static constexpr int numSampleRate = 3;
    static constexpr int numCutoffFreq = 4;
    static constexpr int numBiquad = 2;
    static constexpr int numCoefs = 5;

    const float hpfCoefs[numSampleRate][numCutoffFreq][numBiquad][numCoefs] = {
        {{{3.75990861e-02, 7.51981721e-02, 3.75990861e-02, -1.00051079e+00, 4.88260097e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -9.34811730e-02, 8.35691587e-01}},

         {{9.33496028e-02, 1.86699206e-01, 9.33496028e-02, -5.46175713e-01, 4.00841664e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, 6.24072996e-01, 8.44443617e-01}},

         {{2.03402819e-01, 4.06805637e-01, 2.03402819e-01, 9.07507337e-02, 3.66637659e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, 1.27751129e+00, 8.76778880e-01}},

         {{4.04314324e-01, 8.08628647e-01, 4.04314324e-01, 9.85760281e-01, 4.84472062e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, 1.76853864e+00, 9.30605942e-01}}},

        {{{2.49982805e-03, 4.99965609e-03, 2.49982805e-03, -1.60532013e+00, 7.17033792e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -1.37911541e+00, 8.84851383e-01}},

         {{5.94226735e-03, 1.18845347e-02, 5.94226735e-03, -1.47986409e+00, 6.55414313e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -1.10000233e+00, 8.65018816e-01}},

         {{1.20852697e-02, 2.41705394e-02, 1.20852697e-02, -1.33967021e+00, 5.96586053e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -7.86816709e-01, 8.49944451e-01}},

         {{2.21267107e-02, 4.42534214e-02, 2.21267107e-02, -1.18136845e+00, 5.40663648e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -4.48227173e-01, 8.40054725e-01}}},

        {{{5.17335477e-04, 1.03467095e-03, 5.17335477e-04, -1.75391386e+00, 8.03975970e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -1.68424486e+00, 9.17796589e-01}},

         {{1.23205469e-03, 2.46410937e-03, 1.23205469e-03, -1.68204208e+00, 7.59767136e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -1.54221483e+00, 9.00467059e-01}},

         {{2.49982805e-03, 4.99965609e-03, 2.49982805e-03, -1.60532013e+00, 7.17033792e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -1.37911541e+00, 8.84851383e-01}},

         {{4.54587737e-03, 9.09175474e-03, 4.54587737e-03, -1.52318027e+00, 6.75638697e-01},
          {1.00000000e+00, 2.00000000e+00, 1.00000000e+00, -1.19723873e+00, 8.71124473e-01}}}};

    LowPassFilter() = delete;
    LowPassFilter(SampleRate fs, CutoffFreq fc) {
        reset(hpfCoefs[static_cast<int>(fs)][static_cast<int>(fc)], numBiquad);
    };
    ~LowPassFilter() = default;
};

} // namespace ubnt

